name: Publish NuGet Package
on:
  release:
    types: [created]
permissions:
  contents: write 
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build solution
        run: dotnet build --configuration Release --no-restore
      - name: Run tests
        run: dotnet test --no-build --configuration Release --verbosity normal
      - name: Pack NuGet Package
        run: dotnet pack CriticalCrate.ReliableUdp/CriticalCrate.ReliableUdp.csproj --configuration Release --no-build -o ./artifacts
      - name: Create Package Structure
        run: |
          mkdir -p package/Packages/{Runtime,Editor,Tests}
          cp -r ./CriticalCrate.ReliableUdp/bin/Release/net8.0/*.dll package/Packages/Runtime/
          cp CriticalCrate.ReliableUdp/package.json package/Packages/package.json
          cp CriticalCrate.ReliableUdp/CriticalCrate.ReliableUdp.Runtime.asmdef package/Packages/Runtime/
      - name: Create Tarball
        run: |
          tar -czvf CriticalCrate.ReliableUdp.tgz package
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.event.release.tag_name }}" "CriticalCrate.ReliableUdp.tgz" --clobber
      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push "./artifacts/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key $NUGET_API_KEY --skip-duplicate
